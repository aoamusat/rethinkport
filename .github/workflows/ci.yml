name: CI

on:
   push:
      branches: [main, develop]
   pull_request:
      branches: [main]

jobs:
   test:
      runs-on: ubuntu-latest
      strategy:
         matrix:
            python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]

      services:
         mysql:
            image: mysql:8.0
            env:
               MYSQL_ROOT_PASSWORD: test_password
               MYSQL_DATABASE: test_db
            ports:
               - 3306:3306
            options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      steps:
         - uses: actions/checkout@v3

         - name: Set up Python ${{ matrix.python-version }}
           uses: actions/setup-python@v4
           with:
              python-version: ${{ matrix.python-version }}

         - name: Install dependencies
           run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
              pip install pytest pytest-cov

         - name: Wait for MySQL
           run: |
              while ! mysqladmin ping -h"127.0.0.1" -P3306 -uroot -ptest_password --silent; do
                sleep 1
              done

         - name: Run tests
           run: |
              pytest tests/ -v --cov=mysql_migrator --cov-report=xml
           env:
              MYSQL_HOST: 127.0.0.1
              MYSQL_PORT: 3306
              MYSQL_USER: root
              MYSQL_PASSWORD: test_password
              MYSQL_DATABASE: test_db

         - name: Upload coverage to Codecov
           uses: codecov/codecov-action@v3
           with:
              file: ./coverage.xml
              flags: unittests
              name: codecov-umbrella

   lint:
      runs-on: ubuntu-latest
      steps:
         - uses: actions/checkout@v3

         - name: Set up Python
           uses: actions/setup-python@v4
           with:
              python-version: "3.10"

         - name: Install dependencies
           run: |
              python -m pip install --upgrade pip
              pip install black flake8 isort

         - name: Run black
           run: black --check .

         - name: Run flake8
           run: flake8 .

         - name: Run isort
           run: isort --check-only .
